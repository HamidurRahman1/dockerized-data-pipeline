version: '3'

x-airflow-common:
  &airflow-common
  environment:
    &airflow-common-env
    AIRFLOW__CELERY__BROKER_URL: ${CELERY_BROKER_URL}
    AIRFLOW__CELERY__RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AF_DB_URL}
    AIRFLOW__DATABASE__LOAD_DEFAULT_CONNECTIONS: 'false'
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: 'false'
    AIRFLOW__CORE__DEFAULT_TIMEZONE: ${TMZ}
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: ${TMZ}
    AIRFLOW__API__ENABLE_EXPERIMENTAL_API: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.session,airflow.api.auth.backend.basic_auth'
  volumes:
    - ${MOUNT_VOL}/DELETABLE_MOUNT/app/data/landing/failed_banks/:/app/data/landing/failed_banks/
    - ${MOUNT_VOL}/DELETABLE_MOUNT/app/data/processed/failed_banks/:/app/data/processed/failed_banks/
    - ${MOUNT_VOL}/DELETABLE_MOUNT/app/data/archive/failed_banks/:/app/data/archive/failed_banks/
    - ${MOUNT_VOL}/DELETABLE_MOUNT/app/data/landing/nyc_violations/:/app/data/landing/nyc_violations/
    - ${MOUNT_VOL}/DELETABLE_MOUNT/app/data/processed/nyc_violations/:/app/data/processed/nyc_violations/
    - ${MOUNT_VOL}/DELETABLE_MOUNT/app/data/archive/nyc_violations/:/app/data/archive/nyc_violations/
    - ${MOUNT_VOL}/DELETABLE_MOUNT/logs/airflow:/opt/airflow/logs/
    - ./airflow/dags:/opt/airflow/dags/
    - ./airflow/airflow-web-init:/opt/airflow/airflow-web-init
  depends_on:
    &airflow-metadb-depends-on
    airflow-postgres-metadb:
      condition: service_healthy

services:
  airflow-postgres-metadb:
    container_name: ${DDP_AF_PG_METADB_NAME}
    image: postgres:15
    environment:
      POSTGRES_USER: ${AF_META_DB_USERNAME}
      POSTGRES_PASSWORD: ${AF_META_DB_PASS}
      POSTGRES_DB: ${AF_META_DB}
      TZ: ${TMZ}
      PGTZ: ${TMZ}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${AF_META_DB_USERNAME}" ]
      interval: 30s
      retries: 3
    ports:
      - "5000:5432"
    volumes:
      - ${MOUNT_VOL}/DELETABLE_MOUNT/dbdata/airflow-postgres-metadb:/var/lib/postgresql/data
    restart: always
    networks:
      - ddp-network

  ddp-postgres-metadb:
    container_name: ${DDP_PG_METADB_NAME}
    image: postgres:15
    environment:
      POSTGRES_USER: ${DDP_META_DB_USERNAME}
      POSTGRES_PASSWORD: ${DDP_META_DB_PASS}
      POSTGRES_DB: ${DDP_META_DB}
      TZ: ${TMZ}
      PGTZ: ${TMZ}
    ports:
      - "5050:5432"
    volumes:
      - ${MOUNT_VOL}/DELETABLE_MOUNT/dbdata/ddp-postgres-metadb:/var/lib/postgresql/data
      - ./setup/ddp-metadb-init/ddp_metadb_init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - ddp-network

  airflow-webserver:
    <<: *airflow-common
    container_name: ${DDP_AF_PG_WEBSERVER_NAME}
    image: ddp-airflow:v1
    entrypoint: /bin/bash /opt/airflow/airflow-web-init/webserver_entrypoint.sh
    environment:
      <<: *airflow-common-env
      AF_ROLE: ${AF_ROLE}
      AF_USERNAME: ${AF_USERNAME}
      AF_PASS: ${AF_PASS}
      AF_FIRSTNAME: ${AF_FIRSTNAME}
      AF_LASTNAME: ${AF_LASTNAME}
      AF_EMAIL: ${AF_EMAIL}
    ports:
      - "8000:8080"
    restart: always
    depends_on:
      <<: *airflow-metadb-depends-on
    networks:
      - ddp-network

  airflow-scheduler:
    <<: *airflow-common
    container_name: ${DDP_AF_PG_SCHEDULER_NAME}
    image: ddp-airflow:v1
    entrypoint: airflow
    command: scheduler
    restart: always
    depends_on:
      <<: *airflow-metadb-depends-on
    networks:
      - ddp-network

  celery-redis:
    container_name: ${DDP_REDIS_NAME}
    image: redis:latest
    ports:
      - "6379:6379"
    command: redis-server
    volumes:
      - ${MOUNT_VOL}/DELETABLE_MOUNT/dbdata/celery-redis-metadb:/data
    networks:
      - ddp-network

  celery-worker-n1:
    <<: *airflow-common
    container_name: ${DDP_CELERY_WORKER_1_NAME}
    image: ddp-airflow:v1
    restart: always
    depends_on:
      - airflow-scheduler
    entrypoint: airflow
    command: celery worker
    networks:
      - ddp-network

  celery-worker-n2:
    <<: *airflow-common
    container_name: ${DDP_CELERY_WORKER_2_NAME}
    image: ddp-airflow:v1
    restart: always
    depends_on:
      - airflow-scheduler
    entrypoint: airflow
    command: celery worker
    networks:
      - ddp-network

  celery-flower:
    <<: *airflow-common
    container_name: ${DDP_CELERY_FLOWER_NAME}
    image: ddp-airflow:v1
    restart: always
    depends_on:
      - celery-worker-n1
    ports:
      - "9000:5555"
    entrypoint: airflow
    command: celery flower
    networks:
      - ddp-network

  ddp-rest-api:
    <<: *airflow-common
    container_name: ${DDP_REST_API_NAME}
    image: ddp-airflow:v1
    entrypoint: /bin/bash
    command:
      - -c
      - | 
        java -jar /app/jars/ddp-rest/ddp-rest-1.0.jar
    restart: always
    depends_on:
      - ddp-postgres-metadb
    ports:
      - "7000:7000"
    networks:
      - ddp-network

networks:
  ddp-network:
